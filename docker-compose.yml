x-common-app-config: &common-app-config
  build:
    context: .
    dockerfile: DockerFile
  volumes:
    - .:/app
  env_file:
    - src/config/env/.env

  depends_on:
    db:
      condition: service_healthy
    redis:
      condition: service_healthy

  networks:
    - app-net

services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - src/config/env/.env
    environment:
      POSTGRES_USER: bookjo_admin
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: bookjo
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-net

  redis:
    image: redis:7-alpine

    volumes:
      - redis_data:/data

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-net

  web:
    <<: *common-app-config
    working_dir: /app/src
    entrypoint: ./load-scripts.sh
    command: gunicorn --bind 0.0.0.0:8000 --workers 4 config.wsgi:application
    volumes:
      - static_volume:/app/src/config/static
    ports:
      - 8000:8000

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/src/config/static
    depends_on:
      - web
  celery:
    <<: *common-app-config
    working_dir: /app/src
    command: celery -A config worker -l INFO
    restart: always

  celery-beat:
    <<: *common-app-config
    working_dir: /app/src
    command: celery -A config beat -l INFO
    restart: always

volumes:
  static_volume:
  postgres_data:
  redis_data:

networks:
  app-net:
    driver: bridge
#  4456  sudo usermod -aG docker $USER
#  4457  newgrp docker
